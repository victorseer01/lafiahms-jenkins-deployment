services:
  gateway:
    image: thevo/lafia-openmrs-gateway:dev
    platform: linux/amd64
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/gateway.conf:/etc/nginx/conf.d/default.conf
      - ./config/ssl:/etc/nginx/ssl:ro
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    image: thevo/lafia-openmrs-frontend:dev
    platform: linux/amd64
    environment:
      - SPA_PATH=/openmrs/spa
      - API_URL=/openmrs
      - PUBLIC_URL=/openmrs/spa
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:80/ || exit 0
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  backend:
    image: 571600871041.dkr.ecr.eu-west-2.amazonaws.com/lafiaopenmrs-core-backend:latest
    platform: linux/amd64
    environment:
      - OMRS_CONFIG_MODULE_WEB_ADMIN=true
      - OMRS_CONFIG_AUTO_UPDATE_DATABASE=true
      - OMRS_CONFIG_CREATE_TABLES=true
      - OMRS_CONFIG_CONNECTION_SERVER=${HMS_DEV_DB_HOST}
      - OMRS_CONFIG_CONNECTION_DATABASE=${HMS_DEV_DB_NAME}
      - OMRS_CONFIG_CONNECTION_USERNAME=${HMS_DEV_DB_USER}
      - OMRS_CONFIG_CONNECTION_PASSWORD=${HMS_DEV_DB_PASSWORD}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-*}
      - CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS,HEAD,PATCH
      - CORS_ALLOWED_HEADERS=Authorization,Content-Type,X-Requested-With,X-XSRF-TOKEN,Cache-Control,Accept
      - CORS_ALLOW_CREDENTIALS=true
      - CORS_MAX_AGE=3600
    healthcheck:
      test: curl -f http://localhost:8080/openmrs || exit 0
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - openmrs-data:/openmrs/data
    restart: unless-stopped

volumes:
  openmrs-data: ~