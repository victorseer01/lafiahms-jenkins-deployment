server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;

    # SPA base path
    location /openmrs/spa {
        alias /usr/share/nginx/html;
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,X-Requested-With,X-XSRF-TOKEN' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Static files location
    location /openmrs/spa/static {
        alias /usr/share/nginx/html/static;
        expires 1y;
        add_header Cache-Control "public";
    }

    # JSON files location
    location ~ \.(json)$ {
        try_files $uri =404;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        add_header Access-Control-Allow-Origin *;
    }

    # Proxy to backend
    location /openmrs {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers for API
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,X-Requested-With,X-XSRF-TOKEN' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
    }

    # Handle frontend routing
    location / {
        try_files $uri $uri/ /index.html;
    }
}